/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package example

import example.mocks.MockRandomProvider
import example.utils.IRandomProvider
import io.ktor.client.request.*
import io.ktor.client.statement.*
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.engine.*
import io.ktor.server.response.*
import io.ktor.server.routing.*
import io.ktor.server.testing.*
import kotlin.test.*
import kotlinx.serialization.encodeToString as plainJsonFormatter
import kotlinx.serialization.json.Json

val json = Json

class RandomStringsIntegrationTest {

  @Test
  fun canGetRandomStrings() = testApplication {
    application { module() }

    // Arrange
    rootContainer
        .injectHttpContextAccessor()
        .injectServices()
        .injectSingleton<IRandomProvider>(MockRandomProvider("<random>"))

    // Act
    val res = client.get("/random-strings") {}

    // Assert
    assertEquals(
        json.plainJsonFormatter(listOf("<random>", "<random>", "<random>")),
        res.bodyAsText()
    )
  }
}




























































































// fun StartServer(container: DependencyInjectionContainer): NettyApplicationEngine {
//   container.injectServices().injectHttpContextAccessor()
//   val server = createServer(container)
//   server.start(wait = true)
//   return server
// }
